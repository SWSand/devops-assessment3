services:
  db:
    image: postgres:latest
    container_name: postgres
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init_sql_scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - ass3_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "${BACKEND_PORT}:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BACKEND_PORT: ${BACKEND_PORT}
    networks:
      - ass3_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      REST_API_URL: ${REST_API_URL}
      FRONTEND_PORT: ${FRONTEND_PORT}
    networks:
      - ass3_network

networks:
  ass3_network:
    driver: bridge

volumes:
  postgres_data: {}